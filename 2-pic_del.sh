#!/bin/bash

#====================================================================================
# Назначение: Скрипт для интерактивного удаления картинок из заметок Obsidian
# Автор: Hypnodancer
# Дата создания: 10-07-2025
# Версия: 1.0
#====================================================================================

#------------------------------------------------------------------------------------
# Аннотация
#------------------------------------------------------------------------------------
#
# Скрипт нужен для удаления картинок (вместе с ссылками на картинки) из хранилища Obsidian
#
#------------------------------------------------------------------------------------
# Синтаксис: Передаю в команду имя-хранилища, как обязательный аргумент команды
#------------------------------------------------------------------------------------
#
# pic_del.sh <Obsidian>
#
#------------------------------------------------------------------------------------
# Директория запуска скрипта
#------------------------------------------------------------------------------------
# ..
#   - pic_del.sh (скрипт)
#   - <Ссылка на папку с Obsidian-хранилищем>
#
#------------------------------------------------------------------------------------
# Обязательная секция
#------------------------------------------------------------------------------------
# Остановить скрипт при ошибке
set -e

# В скрипт должен быть передан только один аргумент: папка
if [[ ${#@} -ne 1 || ! -d $1 ]]; then
	echo "Передайте в скрипт папку где находятся заметки"
  exit
fi

#------------------------------------------------------------------------------------
# Создаю временную папку (pic_del_sh) и папку-корзину (trash)
#------------------------------------------------------------------------------------
#
# Удаленные картинки будут перемещаться в папку trash

mkdir -p pic_del_sh trash
cd pic_del_sh

# Файл для экспорта переменных в скрипт
touch export_file.vim

#------------------------------------------------------------------------------------
# Создаю файл конфигурации vim: get_note.vim
# Получение имени заметки
#------------------------------------------------------------------------------------

{
echo "\" Настройки для vim (выбор заметки для редактирования)

\" Удаляю маппинг для клавиши <leader>t
unmap <leader>t

\" Сохранить имя заметки в файле
function! ExportCurrentLine()
    let line = getline(\".\")  \" Получаем текущую строку
    let export_line = 'export NOTE=\"' . line . '\"'  \" Формируем строку
    call writefile([export_line], \"export_file.vim\", \"w\")  \" Переписываю файл
    quit! \" Закрываю vim
endfunction

nnoremap <leader>t :call ExportCurrentLine()<CR>
nnoremap бе :call ExportCurrentLine()<CR>
"
} 1> get_note.vim


#------------------------------------------------------------------------------------
# Создаю файл конфигурации vim: get_pic.vim
#------------------------------------------------------------------------------------

{
echo "\" Настройки для vim (Получаю имя картинки)

\" Удаляю маппинг для клавиши <leader>t
unmap <leader>t

\" Сохраняю имя картинки и удаляю ссылку на картинку
function! ExportPicName()
    \" Получаю текущую строку
    let line = getline(\".\")

    \" Получаю имя картинки
    let picname = matchstr(line, '\v\!\[\[\zs[^\]]+\ze\]\]')

    \" Если картинка найдена
    if !empty(picname)
        \" Записываю имя картинки в export_file.vim
        let export_line = 'export PIC=\"' . picname . '\"'
        call writefile([export_line], \"$(pwd)/export_file.vim\", \"w\")

        \" Удаляю текущую строку-ссылку на картинку
        execute \"normal! dd\"
    endif

    \" Сохраняю изменения и закрываю vim
    write | quit
endfunction

nnoremap <leader>t :call ExportPicName()<CR>
nnoremap бе :call ExportPicName()<CR>
"
} 1> get_pic.vim 

#------------------------------------------------------------------------------------
# 1) Ищу интересующую заметку
#------------------------------------------------------------------------------------

# Создаю файл диалога "all_notes_md" в котором я буду искать свою заметку с помощью vim
printf "1) Найдите свою заметку используя поиск по шаблону\n2) Убедитесь что заметка с таким \
именем одна, используя клавишу "n"\n3) Когда курсор будет находиться на \
интересующей заметке нажмите <leader>t чтобы редактировать заметку\n\n" > all_notes_md.vim

# Передаю в этот файл названия всех заметок содержащихся в хранилище (рекурсивный поиск)
# Obsidian - это символьная ссылка на оригинальную папку Obsidian
# и поэтому нужен синтаксис: "Obsidian/."
find ../$1/. -type f -name "*.md" >> all_notes_md.vim


# Запускаю vim с особыми настройками
# В vim я найду заметку через / (поиск)
# Сохраню имя заметки в переменную NOTE в файл export_file.vim
vim -c "source get_note.vim" all_notes_md.vim


# Считываю переменную в текущий bash-скрипт
source "export_file.vim"

if [ -z "$NOTE" ]; then
  echo "Вы не выбрали заметку для редактирования"
  exit
fi

#------------------------------------------------------------------------------------
# 2) Получаю имя картинки; Удаляю ссылку и перемещаю картинку в папку trash
#------------------------------------------------------------------------------------

clear
# Создаю сообщение для пользователя
printf "\e[33mДалее откроется редактируемая заметка:
\e[32m  1) Найдите свою картинку используя поиск по шаблону: (/)
  2) Когда курсор будет находиться на ссылке к картинке,
     которую нужно удалить - нажмите <leader>t\n\n
\e[35mДля продолжения нажмите любую клавишу...\e[0m"

read -n 1 -s
echo

# Открываю нужную заметку и ищу в ней картинку через / (поиск)
# Сохраняю имя картинки в переменную PIC (в файл export_file.vim)
vim -c "source $(pwd)/get_pic.vim" "$NOTE"

# Считываю переменную в текущий bash-скрипт
source "export_file.vim"

if [ -z "$PIC" ]; then
  echo "Вы не выбрали картинку для удаления"
  exit
fi

find_pic=$(find "../$1/." -type f -name "$PIC" -print -quit)

if [[ -z "$find_pic" ]]; then
    echo "Ошибка: картинка не найдена"
    exit
fi

# Перемещаю найденную картинку в папку trash
mv "$find_pic" ../trash/

# Удаляю папку pic_del_sh
cd ..
rm -fr pic_del_sh

