#!/bin/bash

#====================================================================================
# Назначение: Скрипт для интерактивного удаления картинок из заметок Obsidian
# Автор: Hypnodancer
# Дата создания: 10-07-2025
# Версия: 1.0
#====================================================================================

#------------------------------------------------------------------------------------
# Аннотация
#------------------------------------------------------------------------------------
#
# Скрипт нужен для удаления картинок (вместе с ссылками на картинки) из хранилища Obsidian
#
#------------------------------------------------------------------------------------
# Синтаксис: Передаю в команду имя-хранилища, как обязательный аргумент команды
#------------------------------------------------------------------------------------
#
# pic_del.sh <Obsidian>
#
#------------------------------------------------------------------------------------
# Директория запуска скрипта
#------------------------------------------------------------------------------------
# ..
#   - pic_del.sh (скрипт)
#   - <Ссылка на папку с Obsidian-хранилищем>
#
#------------------------------------------------------------------------------------
# Обязательная секция
#------------------------------------------------------------------------------------
# Остановить скрипт при ошибке
set -e

# В скрипт должен быть передан только один аргумент: папка
if [[ ${#@} -ne 1 || ! -d $1 ]]; then
	echo "Передайте в скрипт папку где находятся заметки"
  exit
fi

#------------------------------------------------------------------------------------
# Создаю временную папку
#------------------------------------------------------------------------------------

mkdir -p pic_del_sh
cd pic_del_sh

# Файл для экспорта переменных в скрипт
touch export_file.vim

#------------------------------------------------------------------------------------
# Создаю файл конфигурации vim: get_note.vim
#------------------------------------------------------------------------------------

{
echo "\" Настройки для vim (выбор заметки для редактирования)

\" Удаляю маппинг для клавиши <leader>t
unmap <leader>t

\" Сохранить имя заметки в файле
function! ExportCurrentLine()
    let line = getline(\".\")  \" Получаем текущую строку
    let export_line = 'export NOTE=\"' . line . '\"'  \" Формируем строку
    call writefile([export_line], \"export_file.vim\", \"w\")  \" Переписываю файл
    quit! \" Закрываю vim
endfunction

nnoremap <leader>t :call ExportCurrentLine()<CR>
nnoremap бе :call ExportCurrentLine()<CR>
"
} 1> get_note.vim


#------------------------------------------------------------------------------------
# Создаю файл конфигурации vim: get_pic.vim
#------------------------------------------------------------------------------------


#------------------------------------------------------------------------------------
# Создаю файл конфигурации vim: del_pic.vim
#------------------------------------------------------------------------------------

# {
# echo "\" Настройки для vim (перемещение картинок в хранилище)

# \" Удаляю маппинг для клавиши <leader>t
# unmap <leader>t

# \" Копирование (Перемещение) файлов в папку content
# function! ExportCurrentLine()
    # let filename = getline(\".\")  \" Получаем имя файла картинки из текущей строки
    # let target_dir = getline(7)  \" Получаю имя папки куда будет перемещена картинка
    # let target_note = getline(12) \" Имя заметки, в которую я буду добавлять ссылку

    # \" Получаем только имя файла без пути
    # let short_filename = fnamemodify(filename, \":t\")

    # \" Получаем текущую дату и время в нужном формате
    # let timestamp = strftime(\"%Y%m%d%H%M\")

    # \" Формируем новое имя файла
    # let new_filename = timestamp . \"-\" . short_filename

    # \" Полный путь для нового файла
    # let new_filepath = target_dir . \"/\" . new_filename

    # \" Создаю команду по перемещению файла с новым именем
    # let move_cmd = \"mv \" . shellescape(filename) . \" \" . shellescape(new_filepath)
    
    # \" Добавляю ссылку в заметку Obsidian
    # let del_link = \"echo -e '\n![[\" . new_filename . \"]]' >> \" . shellescape(target_note)

    # call system(move_cmd)  \" Переместить файл с новым именем
    # call system(del_link)  \" Добавить ссылку в заметку

    # \" Удаляем текущую строку с именем файла
    # execute \"normal! dd\"
# endfunction

# nnoremap <leader>t :call ExportCurrentLine()<CR>
# nnoremap бе :call ExportCurrentLine()<CR>



# \" Копирование (Перемещение) файлов в папку content: диапазон (визуальный режим)
# function! ExportSelectedLines()
    # let start = getpos(\"'<\")[1]  \" Начальная строка выделения
    # let end = getpos(\"'>\")[1]    \" Конечная строка выделения
    # let target_dir = getline(7)  \" Папка назначения
    # let target_note = getline(12) \" Файл заметки для ссылок

    # \" Получаем все выделенные строки (файлы)
    # let files = getline(start, end)

    # \" Перебираем каждый файл
    # for filename in files
        # let short_filename = fnamemodify(filename, \":t\") \" Только имя файла
        # let timestamp = strftime(\"%Y%m%d%H%M\") \" Дата-время
        # let new_filename = timestamp . \"-\" . short_filename \" Новое имя\"
        # let new_filepath = target_dir . \"/\" . new_filename

        # \" Перемещаем файл
        # let move_cmd = \"mv \" . shellescape(filename) . \" \" . shellescape(new_filepath)
        # call system(move_cmd)

        # \" Добавляем ссылку в заметку
        # let del_link = \"printf '\n![[\" . new_filename . \"]]' >> \" . shellescape(target_note)
        # call system(del_link)
    # endfor

    # \" Удаляю имена файлов картинок которые я переместил в хранилище
    # normal! gvx
# endfunction

# vnoremap <leader>t :<C-u>call ExportSelectedLines()<CR><CR>
# vnoremap бе :<C-u>call ExportSelectedLines()<CR><CR>
# "
# } 1> del_pic.vim


#------------------------------------------------------------------------------------
# 1) Ищу интересующую заметку
#------------------------------------------------------------------------------------

# Создаю файл диалога "all_notes_md" в котором я буду искать свою заметку с помощью vim
printf "1) Найдите свою заметку используя поиск по шаблону\n2) Убедитесь что заметка с таким \
именем одна, используя клавишу "n"\n3) Когда курсор будет находиться на \
интересующей заметке нажмите <leader>t чтобы редактировать заметку\n\n" > all_notes_md.vim

# Передаю в этот файл названия всех заметок содержащихся в хранилище (рекурсивный поиск)
# Obsidian - это символьная ссылка на оригинальную папку Obsidian
# и поэтому нужен синтаксис: "Obsidian/."
find ../$1/. -type f -name "*.md" >> all_notes_md.vim


# Запускаю vim с особыми настройками
# В vim я найду заметку через / (поиск)
# Сохраню имя заметки в переменную NOTE в файл export_file.vim
vim -u NONE -c "source ~/.vimrc | source get_note.vim" all_notes_md.vim


# Считываю переменную в текущий bash-скрипт
source "export_file.vim"

if [ -z "$NOTE" ]; then
  echo "Вы не выбрали заметку для редактирования"
  exit
fi

#------------------------------------------------------------------------------------
# 2) Указываю имя удаляемой картинки
#------------------------------------------------------------------------------------

# Создаю файл диалога "find_pic" в котором я буду искать свою заметку с помощью vim
printf "1) Найдите свою картинку используя поиск по шаблону\n \
именем одна, используя клавишу "n"\n3) Когда курсор будет находиться на \
ссылке к интересующей картинке нажмите <leader>t чтобы удалить картинку\n\n" > find_pic.vim

# Запускаю vim с особыми настройками
# В заметке я найду имя картинки через / (поиск)
# Сохраню имя картинки в переменную PIC в файл export_file.vim
vim -u NONE -c "source ~/.vimrc | source get_pic.vim" find_pic.vim


vim -c "source get_pic.vim" -c "/pattern" find_pic.vim

# Считываю переменную в текущий bash-скрипт
# source "export_file.vim"

# if [ -z "$CONTENT" ]; then
  # echo "Вы не выбрали папку для хранения картинки"
  # exit
# fi

# # Создаю файл диалога "all_dir" в котором я буду искать папку-источник картинок
# printf "1) Найдите папку-источник в которой находятся картинки (отсюда я беру фото), \
# используя поиск по шаблону\n2) Убедитесь что папка с таким именем одна, используя клавишу "n" \
# \n3) Когда курсор будет находиться на интересующей папке нажмите <leader>t \
# чтобы записать директорию\n\n" > all_dir.vim

# # Передаю в этот файл названия всех папок содержащихся в директории запуска скрипта за исключением скрытых папок
# find_args=(-maxdepth 1 -not -name ".." -not -name "$1" -not -name "pic_del_sh" -not -path '*/.*')
# find .. "${find_args[@]}" -type d >> all_dir.vim

# # Запускаю vim с особыми настройками
# # В vim я найду папку-источник через / (поиск)
# # Сохраню имя папки в переменную SOURCE_PIC в файл export_file.vim
# vim -u NONE -c "source ~/.vimrc | source get_source.vim" all_dir.vim


# # Считываю переменную в текущий bash-скрипт
# source "export_file.vim"

# if [ -z "$SOURCE_PIC" ]; then
  # echo "Вы не выбрали папку-источник с картинками"
  # exit
# fi

#------------------------------------------------------------------------------------
# 3) Указываю путь до целевой папки хранения картинок в хранилище Obsidian
#------------------------------------------------------------------------------------

# Создаю файл диалога "all_dir.vim" в котором я буду искать папку-приемник картинок
# printf "1) Найдите папку-приемник для хранения контента (картинки) в хранилище Obsidian \
# используя поиск по шаблону\n2) Убедитесь что папка с таким именем одна, используя клавишу "n" \
# \n3) Когда курсор будет находиться на интересующей папке нажмите <leader>t \
# чтобы записать директорию\n\n" > all_dir.vim

# Передаю в этот файл названия всех папок содержащихся в хранилище (кроме скрытых; рекурсивный поиск)
# find "../$1/." \( -name '.*' -and -type d -and -not -name '.' \) -prune -o -type d -print >> all_dir.vim

# Запускаю vim с особыми настройками
# В vim я найду папку "content (примерное название)" через / (поиск)
# Сохраню имя папки в переменную CONTENT в файл export_file.vim
# vim -u NONE -c "source ~/.vimrc | source get_content.vim" all_dir.vim

# Считываю переменную в текущий bash-скрипт
# source "export_file.vim"

# if [ -z "$CONTENT" ]; then
  # echo "Вы не выбрали папку для хранения картинки"
  # exit
# fi


#------------------------------------------------------------------------------------
#                                Добавляю картинки
#------------------------------------------------------------------------------------

# Создаю файл диалога "all_pic.vim" в котором будут выведены все картинки из папки-источника
# Выбираю картинки по одной; Выбранная картинка будет перемещена в хранилище Obsidian
# А запись о данной картинке пропадает из файла "all_pic.vim"

echo -e "1) Выберите картинку, которую вы хотите включить в заметку, используя поиск по шаблону\n\
2) Когда курсор будет находиться на интересующей картинке, нажмите <leader>t чтобы \
переместить картинку \nв хранилище и сделать ссылку о картинке в редактируемой заметке\n" > all_pic.vim
echo "--------------------------------------------------------------------------------------------" >> all_pic.vim
echo "Папка в которую будут перемещены выбранные картинки:" >> all_pic.vim
echo "$CONTENT" >> all_pic.vim
echo -e "--------------------------------------------------------------------------------------------\n" >> all_pic.vim
echo "--------------------------------------------------------------------------------------------" >> all_pic.vim
echo "Редактируемая заметка (здесь появятся ссылки на перемещенные картинки):" >> all_pic.vim
echo "$NOTE" >> all_pic.vim
echo -e "--------------------------------------------------------------------------------------------\n" >> all_pic.vim
echo -e "После того как вы закончили работу с этим окном завершите работу vim с помощью ZZ \
\n(это нужно для очистки от ненужных файлов и пустых папок)\n" >> all_pic.vim

# Передаю в этот файл имена всех картинок содержащихся в исходной папке
find "$SOURCE_PIC" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) >> all_pic.vim

# Запускаю vim с особыми настройками
# Перемещаю файл картинки в папку хранилища Obsidian ("content")
vim -u NONE -c "source ~/.vimrc | source del_pic.vim" all_pic.vim


# Удалить папку source если она пустая
if [ -z "$(ls -A "$SOURCE_PIC")" ]; then
    rmdir "$SOURCE_PIC"
fi

# Удаляю папку pic_del_sh
cd ..
rm -fr pic_del_sh

